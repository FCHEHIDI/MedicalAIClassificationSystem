# Production Medical Classification Platform
# Docker Compose for complete deployment

version: '3.8'

services:
  # Production API Service
  medical-api:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: medical-classification-api
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - LOG_LEVEL=info  
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - medical-network

  # Professional Dashboard
  medical-dashboard:
    build:
      context: .
      dockerfile: docker/dashboard.Dockerfile
    container_name: medical-classification-dashboard
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - API_URL=http://medical-api:8000
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data:ro
    depends_on:
      - medical-api
    restart: unless-stopped
    networks:
      - medical-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: medical-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - medical-api
      - medical-dashboard
    restart: unless-stopped
    networks:
      - medical-network

  # Monitoring & Logging (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: medical-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - medical-network

  grafana:
    image: grafana/grafana:latest
    container_name: medical-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=medical-admin-2025
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - medical-network

networks:
  medical-network:
    driver: bridge

volumes:
  grafana-storage:
