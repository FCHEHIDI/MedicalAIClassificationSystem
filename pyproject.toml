[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "medical-classification-engine"
version = "1.0.0"
description = "Production-ready Medical Document Classification System with MLOps"
authors = [
    {name = "Fares", email = "fareschehidi7@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "Topic :: Scientific/Engineering :: Medical Science Apps",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "scikit-learn==1.3.2",
    "pandas==2.1.4",
    "numpy==1.24.4",
    "fastapi==0.104.1",
    "streamlit==1.28.2",
    "mlflow==2.8.1",
    "psycopg2-binary==2.9.9",
    "sqlalchemy==2.0.23",
    "pydantic==2.5.1",
    "python-dotenv==1.0.0",
    "uvicorn[standard]==0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "black==23.11.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    "jupyter==1.0.0",
]
nlp = [
    "nltk==3.8.1",
    "spacy==3.7.2",
    "transformers==4.36.2",
]
monitoring = [
    "prometheus-client==0.19.0",
    "grafana-api==1.0.3",
]

[project.urls]
Homepage = "https://github.com/FCHEHIDI/medical-classification-engine"
Documentation = "https://github.com/FCHEHIDI/medical-classification-engine#readme"
Repository = "https://github.com/FCHEHIDI/medical-classification-engine"
Issues = "https://github.com/FCHEHIDI/medical-classification-engine/issues"

[project.scripts]
medical-train = "src.training.train:main"
medical-serve = "src.api.main:main"
medical-dashboard = "src.dashboard.app:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
